from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Any


def get_preorder_admin_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞–º–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
        callback_data="preorder_admin:add"
    ))

    builder.row(InlineKeyboardButton(
        text="üì§ –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ (Excel)",
        callback_data="preorder_admin:bulk_upload"
    ))

    builder.row(InlineKeyboardButton(
        text="üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤",
        callback_data="preorder_admin:list"
    ))

    builder.row(InlineKeyboardButton(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–æ–≤",
        callback_data="preorder_admin:stats"
    ))

    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é",
        callback_data="admin:main"
    ))

    return builder.as_markup()


def get_preorder_products_list_keyboard(products: List[Dict[str, Any]],
                                        page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    for product in products:
        text = f"{product['category']} - {product['product_name']} ({product['flavor']})"
        if product.get('preorder_count', 0) > 0:
            text += f" [{product['preorder_count']} –∑–∞–∫–∞–∑–æ–≤]"

        builder.row(InlineKeyboardButton(
            text=text,
            callback_data=f"preorder_admin:view:{product['id']}"
        ))

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if total_pages > 1:
        buttons = []
        if page > 1:
            buttons.append(InlineKeyboardButton(
                text="‚óÄÔ∏è",
                callback_data=f"preorder_admin:list_page:{page - 1}"
            ))

        buttons.append(InlineKeyboardButton(
            text=f"{page}/{total_pages}",
            callback_data="preorder_admin:current_page"
        ))

        if page < total_pages:
            buttons.append(InlineKeyboardButton(
                text="‚ñ∂Ô∏è",
                callback_data=f"preorder_admin:list_page:{page + 1}"
            ))

        builder.row(*buttons)

    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="preorder_admin:menu"
    ))

    return builder.as_markup()


def get_product_admin_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
        callback_data=f"preorder_admin:delete:{product_id}"
    ))

    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
        callback_data="preorder_admin:list"
    ))

    return builder.as_markup()


def get_confirm_delete_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
            callback_data=f"preorder_admin:confirm_delete:{product_id}"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data=f"preorder_admin:view:{product_id}"
        )
    )

    return builder.as_markup()


def get_add_product_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="preorder_admin:cancel_add"
    ))

    return builder.as_markup()


def get_skip_step_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
            callback_data="preorder_admin:skip_step"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="preorder_admin:cancel_add"
        )
    )

    return builder.as_markup()


def get_category_selection_keyboard(categories: List[str]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    builder = InlineKeyboardBuilder()

    for category in categories[:10]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫
        builder.row(InlineKeyboardButton(
            text=f"üì¶ {category}",
            callback_data=f"preorder_admin:select_category:{category}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        callback_data="preorder_admin:new_category"
    ))

    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="preorder_admin:cancel_add"
    ))

    return builder.as_markup()


def get_product_name_selection_keyboard(product_names: List[str]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    builder = InlineKeyboardBuilder()

    for name in product_names[:10]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫
        builder.row(InlineKeyboardButton(
            text=f"üõçÔ∏è {name}",
            callback_data=f"preorder_admin:select_product:{name}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        callback_data="preorder_admin:new_product"
    ))

    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="preorder_admin:cancel_add"
    ))

    return builder.as_markup()


def get_confirm_add_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data="preorder_admin:confirm_add"
        ),
        InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
            callback_data="preorder_admin:edit_summary"
        )
    )

    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="preorder_admin:cancel_add"
    ))

    return builder.as_markup()


def get_edit_field_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    fields = [
        ("üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è", "category"),
        ("üõçÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", "product_name"),
        ("üçì –í–∫—É—Å", "flavor"),
        ("üìù –û–ø–∏—Å–∞–Ω–∏–µ", "description"),
        ("üí∞ –¶–µ–Ω–∞", "price"),
        ("üìÖ –î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏", "expected_date"),
        ("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "image")
    ]

    for text, field in fields:
        builder.row(InlineKeyboardButton(
            text=text,
            callback_data=f"preorder_admin:edit:{field}"
        ))

    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é",
        callback_data="preorder_admin:back_to_confirm"
    ))

    return builder.as_markup()


def get_stats_keyboard(page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if total_pages > 1:
        buttons = []
        if page > 1:
            buttons.append(InlineKeyboardButton(
                text="‚óÄÔ∏è",
                callback_data=f"preorder_admin:stats_page:{page - 1}"
            ))

        buttons.append(InlineKeyboardButton(
            text=f"{page}/{total_pages}",
            callback_data="preorder_admin:current_stats_page"
        ))

        if page < total_pages:
            buttons.append(InlineKeyboardButton(
                text="‚ñ∂Ô∏è",
                callback_data=f"preorder_admin:stats_page:{page + 1}"
            ))

        builder.row(*buttons)

    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="preorder_admin:menu"
    ))

    return builder.as_markup()


def get_bulk_upload_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üì• –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω Excel",
        callback_data="preorder_admin:download_template"
    ))

    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="preorder_admin:cancel_bulk"
    ))

    return builder.as_markup()


def get_bulk_upload_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã",
            callback_data="preorder_admin:confirm_bulk"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="preorder_admin:cancel_bulk"
        )
    )

    return builder.as_markup()
