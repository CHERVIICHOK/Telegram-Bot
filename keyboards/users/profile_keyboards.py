from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.users.database import get_special_user_id
from utils.status_utils import ORDER_STATUS


def get_profile_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üîç –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data="profile:track_orders"
    ))

    builder.row(InlineKeyboardButton(
        text="üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤",
        callback_data="profile:order_history"
    ))

    # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–µ–¥–∑–∞–∫–∞–∑–æ–≤
    builder.row(InlineKeyboardButton(
        text="üõçÔ∏è –¢–æ–≤–∞—Ä—ã —Å–∫–æ—Ä–æ –≤ –ø—Ä–æ–¥–∞–∂–µ",
        callback_data="profile:preorders"
    ))

    builder.row(InlineKeyboardButton(
        text="üì¶ –ú–æ–∏ –ø—Ä–µ–¥–∑–∞–∫–∞–∑—ã",
        callback_data="profile:my_preorders"
    ))

    builder.row(InlineKeyboardButton(
        text="‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ",
        callback_data="profile:favorites"
    ))

    builder.row(InlineKeyboardButton(
        text="üìù –û —Å–µ–±–µ",
        callback_data="profile:about_me"
    ))

    builder.row(InlineKeyboardButton(
        text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="profile:back_to_main"
    ))

    return builder.as_markup()


def get_active_order_list_keyboard(orders, prefix="track") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (–Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö)"""
    builder = InlineKeyboardBuilder()

    active_orders = [order for order in orders if order[1] != "delivered"]

    for order in active_orders:
        order_id, status, date = order
        emoji = get_status_emoji(status)

        status_text = ORDER_STATUS.get(status, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

        date_str = date.split()[0] if ' ' in date else date

        builder.row(InlineKeyboardButton(
            text=f"{emoji} –ó–∞–∫–∞–∑ #{get_special_user_id(order_id)} –æ—Ç {date_str} - {status_text}",
            callback_data=f"profile:{prefix}_order_{order_id}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
        callback_data="profile:back_to_profile"
    ))

    return builder.as_markup()


def get_delivered_order_list_keyboard(orders, prefix="history") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()

    delivered_orders = [order for order in orders if order[1] == "delivered"]

    for order in delivered_orders:
        id, status, date, user_order_id = order
        emoji = get_status_emoji(status)

        status_text = ORDER_STATUS.get(status, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

        date_str = date.split()[0] if ' ' in date else date

        builder.row(InlineKeyboardButton(
            text=f"{emoji} –ó–∞–∫–∞–∑ #{user_order_id} –æ—Ç {date_str} - {status_text}",
            callback_data=f"profile:{prefix}_order_{id}"  # –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ç—É—Ç –±—ã–ª order_id, –∞ –Ω–µ user_order_id
        ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
        callback_data="profile:back_to_profile"
    ))

    return builder.as_markup()


def get_order_list_keyboard(orders, prefix="track") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()

    for order in orders:
        order_id, status, date = order
        emoji = get_status_emoji(status)

        status_text = ORDER_STATUS.get(status, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

        date_str = date.split()[0] if ' ' in date else date

        builder.row(InlineKeyboardButton(
            text=f"{emoji} –ó–∞–∫–∞–∑ #{order_id} –æ—Ç {date_str} - {status_text}",
            callback_data=f"profile:{prefix}_order_{order_id}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
        callback_data="profile:back_to_profile"
    ))

    return builder.as_markup()


def get_active_order_detail_keyboard(order_id, user_order_id, is_active=True, can_cancel=False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
        callback_data=f"profile:support_{user_order_id}"
    ))

    builder.row(InlineKeyboardButton(
        text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data=f"profile:repeat_order_{order_id}"
    ))

    if can_cancel and is_active:
        builder.row(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞",
            callback_data=f"profile:cancel_order_{order_id}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
        callback_data="profile:back_to_orders"
    ))

    return builder.as_markup()


def get_delivered_order_detail_keyboard(order_id, user_order_id, delivery_rated=False,
                                        products_rated=False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
        callback_data=f"profile:support_{user_order_id}"
    ))

    builder.row(InlineKeyboardButton(
        text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data=f"profile:repeat_order_{order_id}"
    ))

    if not delivery_rated:
        builder.row(InlineKeyboardButton(
            text="‚≠ê –û—Ü–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É",
            callback_data=f"profile:rate_delivery_{order_id}"
        ))

    if not products_rated:
        builder.row(InlineKeyboardButton(
            text="‚úÖ –û—Ü–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä—ã",
            callback_data=f"profile:rate_product_list_{order_id}"
        ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
        callback_data="profile:back_to_orders"
    ))

    return builder.as_markup()


def get_order_detail_keyboard(order_id, is_active=True, can_cancel=False, delivery_rated=False,
                              products_rated=False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()

    if is_active:
        builder.row(InlineKeyboardButton(
            text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
            callback_data=f"profile:support_{order_id}"
        ))

    if can_cancel:
        builder.row(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞",
            callback_data=f"profile:cancel_order_{order_id}"
        ))

    builder.row(InlineKeyboardButton(
        text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data=f"profile:repeat_order_{order_id}"
    ))

    if not delivery_rated:
        builder.row(InlineKeyboardButton(
            text="‚≠ê –û—Ü–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É",
            callback_data=f"profile:rate_delivery_{order_id}"
        ))
    else:
        builder.row(InlineKeyboardButton(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏!"))

    if not products_rated:
        builder.row(InlineKeyboardButton(
            text="‚úÖ –û—Ü–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä—ã",
            callback_data=f"profile:rate_product_list_{order_id}"
        ))
    else:
        builder.row(InlineKeyboardButton(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É —Ç–æ–≤–∞—Ä–æ–≤!"))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
        callback_data="profile:back_to_orders"
    ))

    return builder.as_markup()


def get_delivery_rating_keyboard(order_id) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    builder = InlineKeyboardBuilder()

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    builder.row(InlineKeyboardButton(
        text="‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
        callback_data=f"profile:delivery_rating_{order_id}_{5}"
    ),
        InlineKeyboardButton(
            text="‚≠ê‚≠ê‚≠ê‚≠ê",
            callback_data=f"profile:delivery_rating_{order_id}_{4}"
        )
    )

    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
    builder.row(
        InlineKeyboardButton(
            text="‚≠ê‚≠ê‚≠ê",
            callback_data=f"profile:delivery_rating_{order_id}_{3}"
        ),
        InlineKeyboardButton(
            text="‚≠ê‚≠ê",
            callback_data=f"profile:delivery_rating_{order_id}_{2}"
        ),
        InlineKeyboardButton(
            text="‚≠ê",
            callback_data=f"profile:delivery_rating_{order_id}_{1}"
        )
    )

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å",
        callback_data="profile:back_to_orders"
    ))

    return builder.as_markup()


def get_product_rating_keyboard(order_id, product_id) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ç–æ–≤–∞—Ä–∞"""
    builder = InlineKeyboardBuilder()

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    builder.row(
        InlineKeyboardButton(
            text="‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
            callback_data=f"profile:product_rating_{order_id}_{product_id}_{5}"
        ),
        InlineKeyboardButton(
            text="‚≠ê‚≠ê‚≠ê‚≠ê",
            callback_data=f"profile:product_rating_{order_id}_{product_id}_{4}"
        )
    )

    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
    builder.row(
        InlineKeyboardButton(
            text="‚≠ê‚≠ê‚≠ê",
            callback_data=f"profile:product_rating_{order_id}_{product_id}_{3}"
        ),
        InlineKeyboardButton(
            text="‚≠ê‚≠ê",
            callback_data=f"profile:product_rating_{order_id}_{product_id}_{2}"
        ),
        InlineKeyboardButton(
            text="‚≠ê",
            callback_data=f"profile:product_rating_{order_id}_{product_id}_{1}"
        )
    )

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤",
        callback_data=f"profile:rate_product_list_{order_id}"
    ))

    return builder.as_markup()


def get_product_list_keyboard(order_id, product_details) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ü–µ–Ω–∫–∏"""
    builder = InlineKeyboardBuilder()
    for product in product_details:
        product_id = product['product_id']
        product_name = product['product_name']
        flavor = product['flavor']

        truncated_name = product_name[:15]
        truncated_flavor = flavor[:15]

        name_suffix = "..." if len(product_name) > 15 else ""
        flavor_suffix = "..." if len(flavor) > 15 else ""

        button_text = f"{truncated_name}{name_suffix} - {truncated_flavor}{flavor_suffix}"
        builder.row(InlineKeyboardButton(
            text=button_text,
            callback_data=f"profile:rate_product_{order_id}_{product_id}"
        ))
    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å",
        callback_data="profile:back_to_orders"
    ))
    return builder.as_markup()


def get_comment_keyboard(skip_callback: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
            callback_data=skip_callback,
        )
    )
    return builder.as_markup()


def get_support_keyboard(order_id) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="üì± –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º",
        url="https://t.me/zaxhz"
    ))

    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É",
        callback_data=f"profile:back_to_order_{order_id}"
    ))

    return builder.as_markup()


def get_status_emoji(status):
    """–≠–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
    status_emojis = {
        "processing": "‚è≥",
        "confirmed": "üó≥Ô∏è",
        "assembly": "üì¶",
        "courier": "üì´",
        "shipped": "üöö",
        "delivered": "‚úÖ",
        "canceled": "‚ùå"
    }
    return status_emojis.get(status, "üîî")
