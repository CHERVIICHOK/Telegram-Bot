from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime, timedelta


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def add_navigation_buttons(builder, prev_state=None):
    builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", callback_data="cancel_order_process")
    return builder


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
def get_cancel_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", callback_data="cancel_order_process")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥ –∏ –æ—Ç–º–µ–Ω—ã
def get_back_cancel_kb(prev_state):
    builder = InlineKeyboardBuilder()
    builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", callback_data="cancel_order_process")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ–ø—É—Å–∫–∞
def get_skip_phone_number_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_phone_number")
    builder = add_navigation_buttons(builder, "name")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
def get_delivery_date_kb():
    builder = InlineKeyboardBuilder()

    today = datetime.now()

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    weekdays_ru = {
        'Mon': '–ü–Ω',
        'Tue': '–í—Ç',
        'Wed': '–°—Ä',
        'Thu': '–ß—Ç',
        'Fri': '–ü—Ç',
        'Sat': '–°–±',
        'Sun': '–í—Å'
    }

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    months_ru = {
        'Jan': '—è–Ω–≤',
        'Feb': '—Ñ–µ–≤',
        'Mar': '–º–∞—Ä',
        'Apr': '–∞–ø—Ä',
        'May': '–º–∞–π',
        'Jun': '–∏—é–Ω',
        'Jul': '–∏—é–ª',
        'Aug': '–∞–≤–≥',
        'Sep': '—Å–µ–Ω',
        'Oct': '–æ–∫—Ç',
        'Nov': '–Ω–æ—è',
        'Dec': '–¥–µ–∫'
    }

    for i in range(0, 16):
        date = today + timedelta(days=i)
        date_str = date.strftime("%d.%m.%Y")

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
        weekday_en = date.strftime("%a")
        month_en = date.strftime("%b")

        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ —Ä—É—Å—Å–∫–∏–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç
        weekday_ru = weekdays_ru.get(weekday_en, weekday_en)
        month_ru = months_ru.get(month_en, month_en)

        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
        if i == 0:
            date_text = f"{date.strftime('%d')} {month_ru} (–°–µ–≥–æ–¥–Ω—è)"
        else:
            date_text = f"{date.strftime('%d')} {month_ru} ({weekday_ru})"

        builder.button(text=date_text, callback_data=f"date_{date_str}")

    builder = add_navigation_buttons(builder, "phone")
    builder.adjust(2)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
def get_delivery_time_kb():
    builder = InlineKeyboardBuilder()

    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    time_slots = [
        "–£—Ç—Ä–æ",
        "–î–µ–Ω—å",
        "–í–µ—á–µ—Ä",
        "–ù–æ—á—å",
        "–ù–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è",
        "–ë–ª–∏–∂–∞–π—à–µ–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è"
    ]

    for slot in time_slots:
        builder.button(text=slot, callback_data=f"time_{slot}")

    builder = add_navigation_buttons(builder, "delivery_date")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
def get_payment_method_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="–û–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º", callback_data="payment_transfer")
    builder.button(text="–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏", callback_data="payment_cash")
    builder = add_navigation_buttons(builder, "payment")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ–ø—É—Å–∫–∞
def get_skip_comment_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_comment")
    builder = add_navigation_buttons(builder, "payment_method")
    builder.adjust(1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
def get_order_confirmation_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="confirm_order")
    builder.button(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="edit_order")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel_order")
    builder.adjust(1)
    return builder.as_markup()


def get_delivery_address_kb(user_id):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∞–¥—Ä–µ—Å–æ–≤
    """
    from database.users.database import get_user_past_addresses

    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—à–ª—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    past_addresses = get_user_past_addresses(user_id)

    if past_addresses:
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        builder.button(text="üìç –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∞–¥—Ä–µ—Å–æ–≤:", callback_data="header_ignore")
        builder.adjust(1)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—à–ª—ã–µ –∞–¥—Ä–µ—Å–∞
        for i, address in enumerate(past_addresses):
            # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–µ
            display_address = address[:50] + "..." if len(address) > 50 else address
            builder.button(text=display_address, callback_data=f"past_address_{i}")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
        builder.button(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å", callback_data="new_address")

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", callback_data="cancel_order_process")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    if past_addresses:
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –∞–¥—Ä–µ—Å–∞ –ø–æ –æ–¥–Ω–æ–º—É, –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤–Ω–∏–∑—É
        adjust_pattern = [1] + [1] * (len(past_addresses) + 1) + [1]
        builder.adjust(*adjust_pattern)
    else:
        builder.adjust(1)

    return builder.as_markup()


def get_promo_code_kb():
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_promo_code")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel_order_process")
    builder.adjust(1)
    return builder.as_markup()


# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
def get_edit_order_kb(delivery_type):
    builder = InlineKeyboardBuilder()
    builder.button(text="–ò–º—è", callback_data="edit_name")
    builder.button(text="–¢–µ–ª–µ—Ñ–æ–Ω", callback_data="edit_phone")
    builder.button(text="–î–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_delivery_date")
    builder.button(text="–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_delivery_time")

    # –ï—Å–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º, –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
    if delivery_type != "–°–∞–º–æ–≤—ã–≤–æ–∑":
        builder.button(text="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_address")

    builder.button(text="–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", callback_data="edit_payment")
    builder.button(text="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data="edit_comment")
    builder.button(text="–ü—Ä–æ–º–æ–∫–æ–¥", callback_data="edit_promo_code")  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
    builder.button(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é", callback_data="back_to_confirmation")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel_order")
    builder.adjust(1)
    return builder.as_markup()
