import logging

from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from database.users.warehouse_connection import get_total_value_db
from filters.admin_filter import AdminFilter
from keyboards.admins.statistics_collection_keyboards import (
    get_statistics_menu_keyboard,
    get_back_to_statistics_keyboard,
    get_pagination_keyboard
)
from keyboards.admins.menu_keyboard import get_admin_menu_keyboard
from database.admins.statistics_db import (
    get_total_sales_statistics,
    get_delivered_orders,
    get_profit_statistics
)
from states.statistics_collection_state import StatisticsState

router = Router()
router.message.filter(AdminFilter())
router.callback_query.filter(AdminFilter())

logger = logging.getLogger(__name__)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.callback_query(F.data == "admin_statistics")
async def show_statistics_menu(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await state.clear()
    await callback.message.edit_text(
        "üìà –ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
        reply_markup=get_statistics_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "calculate_warehouse_value")
async def calculate_warehouse_value(callback: CallbackQuery):
    try:
        total_value = get_total_value_db()

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
        formatted_value = f"{total_value:,.2f}".replace(',', ' ')

        await callback.message.edit_text(
            f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: {formatted_value} ‚ÇΩ\n\n"
            f"–†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö –∑–∞–∫—É–ø–æ—á–Ω—ã—Ö —Ü–µ–Ω.",
            reply_markup=get_back_to_statistics_keyboard()
        )
    except Exception as e:
        await callback.message.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–∫–ª–∞–¥–∞: {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.",
            reply_markup=get_back_to_statistics_keyboard()
        )

    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.callback_query(F.data == "back_to_statistics")
async def back_to_statistics_menu(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await state.clear()
    await callback.message.edit_text(
        "üìà –ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
        reply_markup=get_statistics_menu_keyboard()
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
@router.callback_query(F.data == "back_to_admin_menu")
async def back_to_admin_menu(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await state.clear()
    await callback.message.edit_text(
        "üë®‚Äçüíº –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_menu_keyboard()
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
@router.callback_query(F.data == "sales_statistics")
async def show_sales_statistics(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂"""
    await state.set_state(StatisticsState.sales_statistics)

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_orders, total_sales, average_check, delivered_orders = get_total_sales_statistics()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–∞—Ö –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    orders, total_pages = get_delivered_orders(page=1)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(current_page=1, total_pages=total_pages)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    message_text = (
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂</b>\n\n"
        f"üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: <b>{total_orders}</b>\n"
        f"‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: <b>{delivered_orders}</b>\n"
        f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂: <b>{total_sales:.2f} —Ä—É–±.</b>\n"
        f"üßæ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: <b>{average_check:.2f} —Ä—É–±.</b>\n\n"
    )

    if orders:
        message_text += "<b>–î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</b>\n\n"
        for order in orders:
            message_text += (
                f"<b>–ó–∞–∫–∞–∑ #{order['order_id']}</b> –æ—Ç {order['created_at']}\n"
                f"üë§ –ö–ª–∏–µ–Ω—Ç: {order['name']} (ID: {order['user_id']})\n"
                f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {order['phone']}\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ (—Å–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö, –∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
            discount_amount = order.get('discount_amount', 0)
            if discount_amount > 0:
                original_amount = order['total_amount'] + discount_amount
                discount_percent = round(discount_amount / original_amount * 100, 1)
                message_text += (
                    f"üíµ –°—É–º–º–∞: <s>{original_amount:.2f} —Ä—É–±.</s> ‚Üí "
                    f"{order['total_amount']:.2f} —Ä—É–±. "
                    f"(-{discount_percent}%, -{discount_amount:.2f} —Ä—É–±.)\n"
                )
            else:
                message_text += f"üíµ –°—É–º–º–∞: {order['total_amount']:.2f} —Ä—É–±.\n"

            message_text += (
                f"üìÖ –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {order['delivery_date']}\n"
                f"üïí –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {order['delivery_time']}\n"
                f"üìç –ê–¥—Ä–µ—Å: {order['delivery_address']}\n"
                f"üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {order['payment_method']}\n"
            )

            if order['comment']:
                message_text += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order['comment']}\n"

            message_text += "üì¶ –¢–æ–≤–∞—Ä—ã:\n"
            for item in order['items']:
                message_text += f"   ‚Ä¢ {item['product_name']} - {item['quantity']} —à—Ç. √ó {item['price']} —Ä—É–±.\n"

            message_text += "\n"
    else:
        message_text += "–ù–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    await callback.message.edit_text(
        message_text,
        reply_markup=get_pagination_keyboard(1, total_pages, "sales"),
        parse_mode="HTML"
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
@router.callback_query(F.data.startswith("sales_page_"))
async def paginate_sales_statistics(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂"""
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page = int(callback.data.split("_")[-1])

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_orders, total_sales, average_check, delivered_orders = get_total_sales_statistics()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–∞—Ö –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    orders, total_pages = get_delivered_orders(page=page)

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(current_page=page, total_pages=total_pages)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    message_text = (
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂</b>\n\n"
        f"üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: <b>{total_orders}</b>\n"
        f"‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: <b>{delivered_orders}</b>\n"
        f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂: <b>{total_sales:.2f} —Ä—É–±.</b>\n"
        f"üßæ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: <b>{average_check:.2f} —Ä—É–±.</b>\n\n"
    )

    if orders:
        message_text += "<b>–î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</b>\n\n"
        for order in orders:
            message_text += (
                f"<b>–ó–∞–∫–∞–∑ #{order['order_id']}</b> –æ—Ç {order['created_at']}\n"
                f"üë§ –ö–ª–∏–µ–Ω—Ç: {order['name']} (ID: {order['user_id']})\n"
                f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {order['phone']}\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ (—Å–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö, –∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
            discount_amount = order.get('discount_amount', 0)
            if discount_amount > 0:
                original_amount = order['total_amount'] + discount_amount
                discount_percent = round(discount_amount / original_amount * 100, 1)
                message_text += (
                    f"üíµ –°—É–º–º–∞: <s>{original_amount:.2f} —Ä—É–±.</s> ‚Üí "
                    f"{order['total_amount']:.2f} —Ä—É–±. "
                    f"(-{discount_percent}%, -{discount_amount:.2f} —Ä—É–±.)\n"
                )
            else:
                message_text += f"üíµ –°—É–º–º–∞: {order['total_amount']:.2f} —Ä—É–±.\n"

            message_text += (
                f"üìÖ –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {order['delivery_date']}\n"
                f"üïí –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {order['delivery_time']}\n"
                f"üìç –ê–¥—Ä–µ—Å: {order['delivery_address']}\n"
                f"üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {order['payment_method']}\n"
            )

            if order['comment']:
                message_text += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order['comment']}\n"

            message_text += "üì¶ –¢–æ–≤–∞—Ä—ã:\n"
            for item in order['items']:
                message_text += f"   ‚Ä¢ {item['product_name']} - {item['quantity']} —à—Ç. √ó {item['price']} —Ä—É–±.\n"

            message_text += "\n"
    else:
        message_text += "–ù–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    await callback.message.edit_text(
        message_text,
        reply_markup=get_pagination_keyboard(page, total_pages, "sales"),
        parse_mode="HTML"
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏
@router.callback_query(F.data == "profit_statistics")
async def show_profit_statistics(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏"""
    await state.set_state(StatisticsState.profit_statistics)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–±—ã–ª–∏ –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    profit_data, total_pages = get_profit_statistics(page=1)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(current_page=1, total_pages=total_pages)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–∏–±—ã–ª–∏
    message_text = "üíπ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–±—ã–ª–∏</b>\n\n"

    if profit_data:
        for order in profit_data:
            message_text += (
                f"<b>–ó–∞–∫–∞–∑ #{order['user_order_id']}</b> –æ—Ç {order['created_at']}\n"
                f"üë§ –ö–ª–∏–µ–Ω—Ç: {order['name']} (ID: {order['user_id']})\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ (—Å–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö, –∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
            discount_amount = order.get('discount_amount', 0)
            if discount_amount > 0:
                original_amount = order['revenue'] + discount_amount
                discount_percent = round(discount_amount / original_amount * 100, 1)
                message_text += (
                    f"üíµ –í—ã—Ä—É—á–∫–∞: <s>{original_amount:.2f} —Ä—É–±.</s> ‚Üí "
                    f"{order['revenue']:.2f} —Ä—É–±. "
                    f"(-{discount_percent}%, -{discount_amount:.2f} —Ä—É–±.)\n"
                )
            else:
                message_text += f"üíµ –í—ã—Ä—É—á–∫–∞: {order['revenue']:.2f} —Ä—É–±.\n"

            message_text += (
                f"üí∞ –ü—Ä–∏–±—ã–ª—å: {order['profit']:.2f} —Ä—É–±.\n"
                f"üìä –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {order['margin']:.2f}%\n\n"
            )
    else:
        message_text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–±—ã–ª–∏.\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    await callback.message.edit_text(
        message_text,
        reply_markup=get_pagination_keyboard(1, total_pages, "profit"),
        parse_mode="HTML"
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏
@router.callback_query(F.data.startswith("profit_page_"))
async def paginate_profit_statistics(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏"""
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page = int(callback.data.split("_")[-1])

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–±—ã–ª–∏ –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    profit_data, total_pages = get_profit_statistics(page=page)

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(current_page=page, total_pages=total_pages)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–∏–±—ã–ª–∏
    message_text = "üíπ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–±—ã–ª–∏</b>\n\n"

    if profit_data:
        for order in profit_data:
            message_text += (
                f"<b>–ó–∞–∫–∞–∑ #{order['user_order_id']}</b> –æ—Ç {order['created_at']}\n"
                f"üë§ –ö–ª–∏–µ–Ω—Ç: {order['name']} (ID: {order['user_id']})\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ (—Å–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö, –∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
            discount_amount = order.get('discount_amount', 0)
            if discount_amount > 0:
                original_amount = order['revenue'] + discount_amount
                discount_percent = round(discount_amount / original_amount * 100, 1)
                message_text += (
                    f"üíµ –í—ã—Ä—É—á–∫–∞: <s>{original_amount:.2f} —Ä—É–±.</s> ‚Üí "
                    f"{order['revenue']:.2f} —Ä—É–±. "
                    f"(-{discount_percent}%, -{discount_amount:.2f} —Ä—É–±.)\n"
                )
            else:
                message_text += f"üíµ –í—ã—Ä—É—á–∫–∞: {order['revenue']:.2f} —Ä—É–±.\n"

            message_text += (
                f"üí∞ –ü—Ä–∏–±—ã–ª—å: {order['profit']:.2f} —Ä—É–±.\n"
                f"üìä –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {order['margin']:.2f}%\n\n"
            )
    else:
        message_text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–±—ã–ª–∏.\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    await callback.message.edit_text(
        message_text,
        reply_markup=get_pagination_keyboard(page, total_pages, "profit"),
        parse_mode="HTML"
    )
    await callback.answer()