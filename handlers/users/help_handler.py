from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
import logging
from datetime import datetime

from config import TECHNICAL_SUPPORT
from keyboards.users.help_keyboards import (
    get_help_menu_keyboard,
    get_back_to_help_keyboard,
    get_contact_support_keyboard,
    get_rating_keyboard
)
from keyboards.users.keyboards import main_menu_keyboard
from states.help_state import HelpState

router = Router()
logger = logging.getLogger(__name__)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ü–æ–º–æ—â—å" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def show_help_menu(message: Message, state: FSMContext):
    await state.set_state(HelpState.main_help)
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=get_help_menu_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏
@router.callback_query(F.data == "back_to_help")
async def back_to_help(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.main_help)
    await callback.message.edit_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=get_help_menu_keyboard()
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_keyboard)
    await callback.message.delete()
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è FAQ
@router.callback_query(F.data == "help_faq")
async def show_faq(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.faq)
    faq_text = """
üìå –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:

1Ô∏è‚É£ –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?  
- –í—ã–±–µ—Ä–µ—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É.
- –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ö–æ—Ä–∑–∏–Ω–∞¬ª ‚Üí ¬´–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é¬ª.  
- –£–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø—Ä–æ—Å–∏—Ç –±–æ—Ç, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑, –∏ –≤–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É.  

2Ô∏è‚É£ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?
–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ".

3Ô∏è‚É£ –ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?
- –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.
- –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.
- –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏.
–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –≤ —Ä–∞–∑–¥–µ–ª–µ "–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã".

4Ô∏è‚É£ –ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞?
–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–æ—Ñ–∏–ª—å" ‚Üí "–ú–æ–∏ –∑–∞–∫–∞–∑—ã".
    - ¬´–ü—Ä–∏–Ω—è—Ç –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É¬ª ‚Äì –∑–∞–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –æ–∂–∏–¥–∞–π—Ç–µ (–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: 10 –º–∏–Ω—É—Ç).  
    - ¬´–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω¬ª ‚Äì –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.  
    - ¬´–í —Å–±–æ—Ä–∫–µ¬ª ‚Äì –∑–∞–∫–∞–∑ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è. 
    - ¬´–ü–µ—Ä–µ–¥–∞–Ω –∫—É—Ä—å–µ—Ä—É¬ª - –∑–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É.
    - ¬´–û—Ç–ø—Ä–∞–≤–ª–µ–Ω¬ª - –∫—É—Ä—å–µ—Ä –≤—ã–µ—Ö–∞–ª –Ω–∞ –∑–∞–∫–∞–∑. 
    - ¬´–î–æ—Å—Ç–∞–≤–ª–µ–Ω¬ª - –∑–∞–∫–∞–∑ –æ—Ç–¥–∞–Ω –∏ –æ–ø–ª–∞—á–µ–Ω.

4Ô∏è‚É£ –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–∫–∞–∑–æ–º?  
–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø—Ä–∏—à–µ–ª, –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã:  
    - –ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π¬ª.  
    - –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞, –≤–∞—à–µ –∏–º—è, —Å—Å—ã–ª–∫—É –Ω–∞ Telegram-–∞–∫–∫–∞—É–Ω—Ç –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
"""
    await callback.message.edit_text(faq_text, reply_markup=get_back_to_help_keyboard())
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
@router.callback_query(F.data == "help_contact")
async def show_contact_support(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.contact_support)
    contact_text = """
üìû –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π:

üïô –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 22:00.

–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É:
"""
    await callback.message.edit_text(contact_text, reply_markup=get_contact_support_keyboard())
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
@router.callback_query(F.data == "help_delivery")
async def show_delivery_info(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.delivery_info)
    delivery_text = """
üöö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ:

‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥. –ö–∞–∑–∞–Ω—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è!
"""
    await callback.message.edit_text(delivery_text, reply_markup=get_back_to_help_keyboard())
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ø–ª–∞—Ç–µ
@router.callback_query(F.data == "help_payment")
async def show_payment_info(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.payment_info)
    payment_text = """
üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:

‚úÖ –ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
‚úÖ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
‚úÖ –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π)

üí∞ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ä—É–±–ª—è—Ö.
üîí –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.
"""
    await callback.message.edit_text(payment_text, reply_markup=get_back_to_help_keyboard())
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
@router.callback_query(F.data == "help_refund")
async def show_refund_policy(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.refund_policy)
    refund_text = """
‚Ü©Ô∏è –ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞:

‚úÖ –í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞ –≤–æ–∑–º–æ–∂–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –¥–Ω—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è.
‚úÖ –¢–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –Ω–µ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–º.
‚úÖ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.

üìù –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:
    ‚Ä¢ –ß–µ–∫ –∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
    ‚Ä¢ –ü—Ä–∏—á–∏–Ω—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    ‚Ä¢ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤
"""
    await callback.message.edit_text(refund_text, reply_markup=get_back_to_help_keyboard())
    await callback.answer()


@router.callback_query(F.data == "help_feedback")
async def start_feedback(callback: CallbackQuery, state: FSMContext):
    await state.set_state(HelpState.feedback_comment)
    await callback.message.edit_text(
        "–ú—ã –±—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞!\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞. "
        "–ß—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏–ª–∏ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å?",
        reply_markup=get_back_to_help_keyboard()
    )
    await callback.answer()


@router.message(HelpState.feedback_comment)
async def process_feedback_comment(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    user = message.from_user
    user_info = f"@{user.username}" if user.username else f"{user.first_name} {user.last_name or ''}"

    await state.update_data(
        comment=message.text,
        user_id=user.id,
        user_info=user_info
    )

    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n\n"
        "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ:",
        reply_markup=get_rating_keyboard()
    )
    await state.set_state(HelpState.feedback_rating)


@router.callback_query(HelpState.feedback_rating, F.data.startswith("rating_"))
async def process_rating(callback: CallbackQuery, state: FSMContext, bot: Bot):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ü–µ–Ω–∫—É –∏–∑ callback_data
    rating = int(callback.data.split("_")[1])
    user_data = await state.get_data()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    comment = user_data.get("comment", "")
    user_id = user_data.get("user_id")
    user_info = user_data.get("user_info")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞–º
    await save_feedback(user_id, comment, rating)
    await send_feedback_to_admins(bot, user_id, user_info, comment, rating)

    # –í—ã–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    stars = "‚≠ê" * rating
    await callback.message.edit_text(
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É: {rating} {stars}\n\n"
        f"–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –æ—Ü–µ–Ω–∫–∞ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –µ—â–µ –ª—É—á—à–µ!",
        reply_markup=get_back_to_help_keyboard()
    )
    await callback.answer()


async def save_feedback(user_id, comment, rating):
    """
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: –û—Ü–µ–Ω–∫–∞ {rating}, –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")

    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
    # –ù–∞–ø—Ä–∏–º–µ—Ä:
    # from database.users.database_connection import get_connection
    # conn = await get_connection()
    # cursor = conn.cursor()
    # try:
    #     cursor.execute(
    #         "INSERT INTO user_feedback (user_id, comment, rating, created_at) "
    #         "VALUES (?, ?, ?, datetime('now'))",
    #         (user_id, comment, rating)
    #     )
    #     conn.commit()
    # except Exception as e:
    #     conn.rollback()
    #     logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞: {e}")
    # finally:
    #     cursor.close()
    #     conn.close()


async def send_feedback_to_admins(bot: Bot, user_id, user_info, comment, rating):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏–∑ —Å–ø–∏—Å–∫–∞ TECHNICAL_SUPPORT
    """
    current_time = datetime.now().strftime("%d.%m.%Y %H:%M")
    stars = "‚≠ê" * rating

    feedback_message = (
        f"üì¢ –ù–û–í–´–ô –û–¢–ó–´–í –û –ë–û–¢–ï üì¢\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info} (ID: {user_id})\n"
        f"‚è∞ –í—Ä–µ–º—è: {current_time}\n"
        f"‚≠ê –û—Ü–µ–Ω–∫–∞: {rating}/5 {stars}\n\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n{comment}"
    )

    for admin_id in TECHNICAL_SUPPORT:
        try:
            await bot.send_message(admin_id, feedback_message)
            logger.info(f"–û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
