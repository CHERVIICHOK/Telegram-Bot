from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message
from database.users.database_connection import create_connection, close_connection
import sqlite3
import datetime
from keyboards.users.keyboards import main_menu_keyboard

router = Router()


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é.
    """
    conn = create_connection()
    user_telegram_id = message.from_user.id
    user_name = message.from_user.first_name if message.from_user.first_name else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    if conn:
        cursor = conn.cursor()
        try:
            cursor.execute("SELECT telegram_id FROM users WHERE telegram_id = ?", (user_telegram_id,))
            existing_user = cursor.fetchone()

            if existing_user:
                await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}! üëã", reply_markup=main_menu_keyboard)
            else:
                now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                cursor.execute("""
                    INSERT INTO users (telegram_id, username, first_name, last_name, first_login_date)
                    VALUES (?, ?, ?, ?, ?)
                """, (
                    user_telegram_id, message.from_user.username, message.from_user.first_name,
                    message.from_user.last_name,
                    now))
                conn.commit()
                await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –≤–ø–µ—Ä–≤—ã–µ!",
                                     reply_markup=main_menu_keyboard)

        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu_keyboard)
        finally:
            close_connection(conn)
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                             reply_markup=main_menu_keyboard)
